package _09_CAS;

/*
 * CAS的缺点:
 * 1. ABA问题
 *    CAS操作是先去检查当前值是否与预期值相同, 再去修改; 但是CAS只是去检查值相不相等,
 *    而不是去检查该变量在此期间是不是被改过; 举个例子, 线程A开始执行CAS操作, 它的期望值为5,
 *    假设此时内存中的真实值就是5, 但是在此时, 线程B将值改为了7, 然后线程C又将值改回了5;
 *    然后线程A读取真实值, 但线程A此时读取出来的值是5, 于是线程A就以为在此期间没有其他线程去做修改,
 *    那么线程A就会去做自己的相应的修改; 但实际上, 在此期间, 线程B和线程C都做了修改,
 *    只不过线程C又将值改回了线程A的期望值; 这可能会造成一些问题; 这就是ABA问题;
 *    解决方式可以是, 借鉴数据库中实现乐观锁的方式, 就是采用版本号, 每次对比的是版本号, 而不是真实值;
 * 2. 自旋时间过长
 *    比如在Unsafe类中, 很多方法都是采用死循环的; 这可能会导致自旋时间过长;
 */

public class CASDrawbacks {
    public static void main(String[] args) {
    }
}
